@model ProductOutputDto

@if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @ViewBag.SuccessMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container m-5">
    <div class="row">
        <div class="col-md-5">
            <img src="/@Model.ProductPhotos.FirstOrDefault()?.FilePath" class="img-fluid w-60" alt="@Model.Name" />
        </div>
        <div class="col-md-7">
            <div class="product-details">
                <h1 class="product-name">@Model.Name</h1>
                @if (Model.Auctions.Any(a => a.IsRunning))
                {
                    <div class="product-price">
                        <span class="badge rounded-pill bg-warning text-dark p-3">آخرین پیشنهاد ثبت شده: @Model.Price.ToString("N0") تومان</span>
                    </div>
                }
                else
                {
                    <div class="product-price">
                        <span class="badge rounded-pill bg-secondary text-dark p-3">قیمت @Model.Price.ToString("N0") تومان</span>
                    </div>
                }
                <div class="product-description border rounded p-3" style="border-radius:15px;">
                    <p>@Model.Description</p>
                </div>
                @if (Model.IsActive && !Model.IsDeleted && Model.Auctions.Any(a => a.IsRunning))
                {
                    @if (ViewBag.RemainingTime != null)
                    {
                        var remainingTime = ((TimeSpan)ViewBag.RemainingTime).TotalSeconds;

                        <div class="product-countdown bg-light d-flex m-2" data-until="@remainingTime" data-relative="true" data-labels-short="true">
                            <span class="text-primary font-weight-bold"> زمان باقی‌مانده تا پایان مزایده: </span>
                            <span class="text-danger font-weight-bold" id="countdownTimer">  </span>
                        </div>
                    }

                    <div class="d-flex justify-content-center m-2">
                        <a asp-action="RegisterBid" asp-controller="Product" asp-route-productId="@Model.Id" class="btn btn-primary col-12">ثبت پیشنهاد</a>
                    </div>
                }
                else if (Model.IsActive && !Model.IsDeleted && Model.Auctions.Any(a => !a.IsRunning))
                {
                    <div class="d-flex justify-content-center m-3">
                        <a href="#" class="btn btn-primary col-12 disabled">مزایده به اتمام رسید.</a>
                    </div>
                }
                else if (Model.IsActive && !Model.IsDeleted && Model.Auctions.Count == 0)
                {
                    <div class="d-flex justify-content-center m-3">
                        <a href="@Url.Action("Purchase", "Product", new { productId = Model.Id })" class="btn btn-primary col-12">خرید کردن</a>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="row text-right">
        <div class="col-md-12 m-5">
            <div class="product-specifications border rounded p-3" style="border-radius: 15px;">
                <h2 class="section-title font-weight-bold">مشخصات</h2>
                <ul class="spec-list">
                    <li class="spec-item"><span class="spec-title font-weight-bold">دسته‌بندی:</span> @Model.Category.Name</li>
                    <li class="spec-item">
                        <span class="spec-title font-weight-bold">برند:</span>
                        @if (Model.Brand != null)
                        {
                            @Model.Brand.Name
                        }
                    </li>
                    @if (Model.Weight.HasValue)
                    {
                        <li class="spec-item "><span class="spec-title font-weight-bold">وزن:</span> @((Model.Weight.Value / 1000).ToString("N1")) کیلوگرم</li>
                    }
                </ul>
            </div>
        </div>
    </div>

    @await Component.InvokeAsync("ProductComments", new { productId = Model.Id })
</div>

<style>
    .spec-list .spec-item {
        border-bottom: 1px solid #ccc;
        padding-bottom: 5px;
        margin-bottom: 5px;
    }

    .font-weight-bold {
        font-weight: bold;
    }
</style>